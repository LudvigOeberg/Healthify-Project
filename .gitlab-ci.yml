stages:
  - install-dependencies
  - build
  - build-image
  - deploy
  - pages

install-app-dependencies:
  stage: install-dependencies
  cache: 
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - frontend/node_modules
  script:
    - cd frontend
    - npm ci
    - npm install react-scripts@3.0.1 -g
  only:
    changes:
      - frontend/package-lock.json

build-frontend:
  stage: build
  image: node
  cache: 
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - frontend/node_modules
    policy: pull
  artifacts:
    expire_in: 1 hour
    paths:
      - frontend/build
  script:
    - cd frontend
    - npm run build

build-app-image:
  stage: build-image
  image: docker.io/buildah/buildah
  needs: ["build-frontend"]
  dependencies:
    - build-frontend
  except:
    changes:
      - public/*
      - "*/README.md"
      - "README.md"

  script:
    - export _BUILDAH_STARTED_IN_USERNS=''
    - export BUILDAH_ISOLATION=chroot
    - export STORAGE_DRIVER=vfs
    - export BUILDAH_FORMAT=docker
    - echo "${CI_REGISTRY_PASSWORD}"
    - echo "${CI_REGISTRY_IMAGE}"
    - echo "${CI_REGISTRY_USER}"
    - echo "${CI_JOB_TOKEN}"
    - buildah build-using-dockerfile --tag "app-frontend" "frontend"
    - buildah push --creds "${CI_REGISTRY_USER}:${CI_JOB_TOKEN}" "app-frontend" "docker://${CI_REGISTRY_IMAGE}/app-frontend:latest"

deploy-app:
  environment: 'production'
  needs: ["build-app-image"]

  only:
    refs:
      - master
    changes:
      - yaml/*

  stage: deploy
  image: lachlanevenson/k8s-kubectl
  script:
    - kubectl get all
    - kubectl apply -f yaml/app-deployment.yaml
    - kubectl apply -f yaml/app-service.yaml
    - kubectl apply -f yaml/app-ingress.yaml

pages:
  stage: pages  
  needs: []
  script:
    - mkdir .public
    - cp -r * .public
    - mv .public public
  artifacts:
    paths:
      - public
  only:
    refs:
      - master
    changes:
      - public/*